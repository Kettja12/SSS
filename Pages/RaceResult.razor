@page "/RaceResult"
@page "/RaceResult/{Id:int}"
@inject StateContainer stateContainer
@inject Repository repository

<h1>@race.Name</h1>
<div class="row mb-3">

    <button type="button" class="btn btn-primary col-3" disabled="@(!category)"  @onclick="()=>ToggleRaceData(false)">
        <i class="fa-solid fa-sailboat mx-2" aria-hidden="true"></i>
        <span>Racing 1  &gt 0,9000</span>
    </button>
    <button type="button" class="btn btn-primary col-3 mx-2" disabled="@(category)" @onclick="()=>ToggleRaceData(true)">
        <i class="fa-solid fa-sailboat mx-2" aria-hidden="true"></i>
        <span>Racing 2 &lt 0,9000</span>
    </button>
</div>
<b class="mb-3">

    @if (category)
    {
        <span class="">
            Racing 2 &lt; 0,9000
        </span>
    }
    else
    {
        <span class="">
            Racing 1 &gt; 0,9000
        </span>
    }
</b>
<RaceResultDetails Id="Id" DoSearch="DoSearch" Category="category" />


@code {
    [Parameter]
    public int Id { get; set; }
    private Race race { get; set; } = new();
    bool DoSearch { get; set; } = true;
    private bool category = false;
    private void ToggleRaceData(bool category)
    {
        if (category != this.category)
        {
            this.category = category;
            DoSearch = true;
            StateHasChanged();
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            race = await repository.GetRaceAsync(Id);
        }
    }

}
